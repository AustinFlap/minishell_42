-redirection de fd <, >, >>.
	--->arreter get_command from tok a pipe, ou >, ou >>, ou <.
		---->faire fonction is_redir_or_pipe.
	--->recuperer le type dans redir type. (iterer lst_token en meme temps)
	--->recuperer le nom du fichier, le open et mettre de fd dans fd_file.("")
	--->forker.
	--->dup2(STDIN ou STDOUT, fd_file); dans le child.
	--->fermer le fd dans le pere (apres le wait).

	ps: cas plusieurs redirs:
		--->il faut ouvrir les fichiers, puis tcheker si il y a d'autre redir,
			fermer le fichiers et faire l'autre redir normalement.
-------------->>DONE, reste erreurs a gerer. DONE!

		  /
 	\    /
  	 \  /
   	  \/

______________________________________________________________________________

-builtins.
	-->fonction is_builtin. DONE!
	-->fonction exec_builtins. redir a faire.
							--->(faire une copie de stdin et out.)
	-->les fonctions builtins.

______________________________________________________________________________
																	  /
-gerer les guillemets au moment des commandes.					\	 /
	----> get_env et remplacer le token env par word. DONE!		 \	/
	----> join les word grace a la fction d'austin.DONE!		  \/

______________________________________________________________________________

-gerer les erreurs.
	*tout les cas où il y a erreur:
		--->command not found. DONE!
		--->./ ou / non executable. (voir permission error julio).
		--->redirection vers dir ou pas les droits. DONE!
		--->erreur dans les builtins. (faut y reflechir)
			--->retour int, et g_sh.status = exec_builtin().

______________________________________________________________________________

-gerer $?
	---> comment avoir le code de retour de execve?
			--->en-as-t-on vraiment besoins en fait?
	--->printf g_sh.status

______________________________________________________________________________

https://stackoverflow.com/questions/8082932/connecting-n-commands-with-pipes-in-a-shell
-gerer les pipes
	--->faire une liste pour cmd. j'ai fait un tableau au final.
	--->quand pipe les builtins sont éxécutés dans un fork.
		---> faire un if(cmd->pipe=1), fork and exit.
		--->j'ai géré avec et sans pipe dans des fct° différentes au final.
		(fork alloue juste la memoire qui a été modifiée, donc il faut juste
		free ce qui a été modifiée si il y en a).
			--->faudra tchéker les leaks peut être mais je crois pas sur ça.
			  /
		\	 /
		 \	/
		  \/



______________________________________________________________________________
